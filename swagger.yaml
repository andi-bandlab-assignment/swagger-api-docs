---
swagger: "2.0"
info:
  description: ""
  version: "1.0.5"
  title: "Content Management API"
host: "1yonz7p1x8.execute-api.ap-southeast-1.amazonaws.com/dev"
basePath: ""
tags:
- name: "upload"
  description: "Upload image securely"
- name: "post"
  description: "Everything about Post creation and retrieval"
- name: "comment"
  description: "Add and delete Comment on a Post"
paths:
  /upload:
    post:
      tags:
      - "upload"
      summary: "generate URL to securely upload an image"
      description: ""
      operationId: "generatedURL"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "File object that needs to be uploaded"
        required: true
        schema:
          $ref: "#/definitions/Upload"
      responses:
        400:
          description: "Invalid input"
  /{presigned_url}:
    put:
      tags:
      - "upload"
      summary: "upload image via presigned URL generated in /upload"
      description: ""
      operationId: "uploadFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        description: "file to upload"
        required: false
        type: "file"
      responses:
        400:
          description: "Invalid input"
  /posts:
    post:
      tags:
      - "post"
      summary: "Create a new post"
      description: ""
      operationId: "addPost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Add Post object"
        required: true
        schema:
          $ref: "#/definitions/Post"
      responses:
        400:
          description: "Invalid input"
    get:
      tags:
      - "post"
      summary: "Retrieve all posts"
      description: ""
      operationId: "getPosts"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        400:
          description: "Invalid input"
  /comments:
    post:
      tags:
      - "comment"
      summary: "Add comment to a post"
      description: ""
      operationId: "addComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Add Comment object"
        required: true
        schema:
          $ref: "#/definitions/Comment"
      responses:
        400:
          description: "Invalid status value"
  /comments/{comment_id}/creators/{creator_id}:
    delete:
      tags:
      - "comment"
      summary: "Delete a comment"
      description: ""
      operationId: "deleteComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "comment_id"
        in: "path"
        description: "comment identifier"
        required: true
        type: "string"
        example: "f7b1cf91-0dcd-4f32-80f1-6bf6658d67e0"
      - name: "creator_id"
        in: "path"
        description: "creator identifier"
        required: true
        type: "string"
        example: "user1"
      responses:
        400:
          description: "Invalid status value"
definitions:
  Upload:
    type: "object"
    required:
    - "file_name"
    - "content_type"
    - "file_size"
    properties:
      file_name:
        type: "string"
        example: "test.jpeg"
      content_type:
        type: "string"
        example: "image/jpeg"
      file_size:
        type: "integer"
        example: 1000
  Post:
    type: "object"
    required:
    - "image_path"
    - "creator"
    properties:
      image_path:
        type: "string"
        example: "https://user-post-images.s3.amazonaws.com/resized/5a357247-75da-48c6-9408-259ea83a004c.jpeg?AWSAccessKeyId=ASIASILMZTP7KJAHWFIO"
      caption:
        type: "string"
        example: "My First Post"
      creator:
        type: "string"
        example: "user1"
  Comment:
    type: "object"
    required:
    - "post_id"
    - "content"
    - "creator"
    properties:
      post_id:
        type: "string"
        example: "cee5cee6-d489-4c2c-b447-f30e7f7243f3"
      content:
        type: "string"
        example: "Awesome post"
      creator:
        type: "string"
        example: "user2"