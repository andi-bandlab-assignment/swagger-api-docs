---
swagger: "2.0"
info:
  description: ""
  version: "1.0.5"
  title: "Content Management API"
host: "1yonz7p1x8.execute-api.ap-southeast-1.amazonaws.com/dev"
basePath: ""
tags:
- name: "upload"
  description: "Upload image securely"
- name: "post"
  description: "Create a Post and retrieve all Posts with pagination"
- name: "comment"
  description: "Add and delete Comment on a Post"
paths:
  /upload:
    post:
      tags:
      - "upload"
      summary: "generate URL to securely upload an image"
      description: ""
      operationId: "generatedURL"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "File object that needs to be uploaded"
        required: true
        schema:
          $ref: "#/definitions/Upload"
      responses:
        400:
          description: "Invalid input"
  /{presigned_url}:
    put:
      tags:
      - "upload"
      summary: "upload image via presigned URL generated in /upload"
      description: ""
      operationId: "uploadFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "file"
        in: "formData"
        description: "file to upload"
        required: false
        type: "file"
      responses:
        400:
          description: "Invalid input"
  /posts:
    post:
      tags:
      - "post"
      summary: "Create a new post"
      description: ""
      operationId: "addPost"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Add Post object"
        required: true
        schema:
          $ref: "#/definitions/PostRequest"
      responses:
        400:
          description: "Invalid input"
    get:
      tags:
      - "post"
      summary: "Retrieve all posts"
      description: ""
      operationId: "getPosts"
      produces:
      - "application/json"
      parameters:
      - name: "limit"
        in: "query"
        description: "The maximum number of posts to return."
        required: false
        schema:
          type: "integer"
          default: 10
      - name: "page_token"
        in: "query"
        description: "Token for paginating through results."
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PostResponse"
        400:
          description: "Invalid input"
  /comments:
    post:
      tags:
      - "comment"
      summary: "Add comment to a post"
      description: ""
      operationId: "addComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Add Comment object"
        required: true
        schema:
          $ref: "#/definitions/CommentRequest"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/CommentResponse"
        400:
          description: "Invalid status value"
  /comments/{comment_id}/creators/{creator_id}:
    delete:
      tags:
      - "comment"
      summary: "Delete a comment"
      description: ""
      operationId: "deleteComment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "comment_id"
        in: "path"
        description: "comment identifier"
        required: true
        type: "string"
        example: "f7b1cf91-0dcd-4f32-80f1-6bf6658d67e0"
      - name: "creator_id"
        in: "path"
        description: "creator identifier"
        required: true
        type: "string"
        example: "user1"
      responses:
        200:
          description: "successful operation"
          type: "object"
          properties:
            deleted:
              type: "boolean"
              example: "True"
        400:
          description: "Invalid status value"
definitions:
  Upload:
    type: "object"
    required:
    - "file_name"
    - "content_type"
    - "file_size"
    properties:
      file_name:
        type: "string"
        example: "test.jpeg"
      content_type:
        type: "string"
        example: "image/jpeg"
      file_size:
        type: "integer"
        example: 1000
  PostRequest:
    type: "object"
    required:
    - "image_path"
    - "creator"
    properties:
      image_path:
        type: "string"
        example: "https://user-post-images.s3.amazonaws.com/resized/5a357247-75da-48c6-9408-259ea83a004c.jpeg?AWSAccessKeyId=ASIASILMZTP7KJAHWFIO"
      caption:
        type: "string"
        example: "My First Post"
      creator:
        type: "string"
        example: "user1"
  PostResponse:
    type: "object"
    properties:
      image_path:
        type: "string"
        example: "https://user-post-images.s3.amazonaws.com/resized/5a357247-75da-48c6-9408-259ea83a004c.jpeg?AWSAccessKeyId=ASIASILMZTP7KJAHWFIO"
      caption:
        type: "string"
        example: "Bandlab tech"
      creator:
        type: "string"
        example: "user3"
      created_at:
        type: "string"
        format: "date-time"
        example: "2023-11-13 17:09:00.294058"
      comments:
        type: "array"
        items:
          type: "object"
          properties:
            comment_id:
              type: "string"
              example: "ad532a63-7e56-480a-a40a-72e49643c13f"
            content:
              type: "string"
              example: "awesome post"
            created_at:
              type: "string"
              format: "date-time"
              example: "2023-11-14 01:57:55.497507"
            creator:
              type: "string"
              example: "user1"
      post_id:
        type: "string"
        example: "40c32bf5-ac99-42f4-8bd2-0656ebcb05eb"
  CommentRequest:
    type: "object"
    required:
    - "post_id"
    - "content"
    - "creator"
    properties:
      post_id:
        type: "string"
        example: "cee5cee6-d489-4c2c-b447-f30e7f7243f3"
      content:
        type: "string"
        example: "Awesome"
      creator:
        type: "string"
        example: "user1"
  CommentResponse:
    type: "object"
    properties:
      comment_id:
        type: "string"
        example: "28baa1c8-9dd3-4e15-bd0f-58e60b48eddd"
      content:
        type: "string"
        example: "Awesome"
      created_at:
        type: "string"
        format: "date-time"
        example: "2023-11-14 18:13:37.888643"
      creator:
        type: "string"
        example: "user1"